#!/bin/bash
#
# We can only run the tests if the project is fully installed. We cannot run
# the programs from inside the build directory without installation, because
# the Python modules need to be located in a specific location, the native
# libraries have to be placed there and we would have to mangle $PYTHON_PATH
# and $LD_LIBRARY_PATH. Meson does not make this convenient.
#

set -u


tmpdir=$(mktemp -d)
trap 'rm -rf "${tmpdir}"' EXIT

bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
normal=$(tput sgr0)


cmd_hash() {
	printf '%s\0' "$@" | base64
}


print_result() {
	local res="$1"; shift
	local lb="$1"; shift
	local ub="$1"; shift
	local cmd=( "${@}" )
	unset cmd[-1]

	if [[ "${res}" -eq 0 ]]; then
		printf '%s[ ok ]%s %+12e / %+12e - %s\n' \
			"${bold}${green}" "${normal}" "${lb}" "${ub}" "${cmd[*]}"
	else
		printf '%s[FAIL]%s % 13s / % 13s - %s\n' \
			"${bold}${red}" "${normal}" NaN NaN "${cmd[*]}"
	fi
}


runner() {
	local d="${tmpdir}/$(cmd_hash "$@")"
	mkdir "${d}"
	"$@" >"${d}/stdout" 2>"${d}/stderr"
	local res=$?

	cat "${d}/stderr" | fgrep -v "RuntimeWarning: compiletime version 3.7 of module 'gurobipy' does not match runtime version" >"${d}/stderr.new"
	mv "${d}/stderr.new" "${d}/stderr"

	if [[ $res -eq 0 ]] && [[ -s "${d}/stderr" ]]; then
		local res=1
	fi

	local line=$(egrep '^it=' "${d}/stdout" | tail -n1)
	lb=$(sed -rne 's/.* lb=([^ ]+) .*/\1/p' <<<"${line}")
	ub=$(sed -rne 's/.* ub=([^ ]+) .*/\1/p' <<<"${line}")

	print_result "${res}" "${lb}" "${ub}" "$@"
	rm -rf "${d}"
}


main() {
	local model=tests/instances/ct_000.jug.xz
	runner ct_jug -b 10 "${model}" &
	runner ct_jug -b 10 --ilp standard "${model}" &
	runner ct_jug -b 10 --ilp decomposed "${model}" &

	local model=tests/instances/gm_000.uai.xz
	runner gm_uai -b 10 "${model}" &

	local model=tests/instances/qap_000.dd.xz
	for relaxation in gm gm-unordered qap-pw qap; do
		for side in left right; do
			runner qap_dd -b 10 --relaxation "${relaxation}" --unary-side "${side}" "${model}" &
		done
	done
	runner qap_dd -b 10 --ilp "${model}" &
	runner qap_dd -B 1000 -b 1 --combilp "${model}" &

	wait
}


main "$@"
